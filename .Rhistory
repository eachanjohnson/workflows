devtools::document
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
?newTarget
devtools::install()
library(workflows)
ls()
build
build.pipeline
build.target
build('hey')
methods(bind)
scatter
scatter(workflow)
scatter('workflow')
?scattr
?scatter
devtools::document()
loadedNamespaces()
.Library
.Library.site
.libPaths()
sessionInfo()
version
version$major
version$minor
d <- data.frame(chunk_factor=rep(LETTERS[1:5], times=100), vals=rpois(500, lambda=10))
View(d)
hist(d$vals)
readr::write_csv(d, 'tests/input/input-df.csv')
library(workflows)
setwd("~/ejohnson/code/workflows/workflows/tests/R")
w <- newWorkflow(read.csv('../input/input-df.csv'), working_directory='output')
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
w
?sactter
?scatter
w <- scatter(w, by='chunk_factor')
setwd("~/ejohnson/code/workflows/workflows")
devtools::install()
w <- scatter(w, by='chunk_factor')
devtools::document()
devtools::install()
w <- scatter(w, by='chunk_factor')
str(w)
w <- scatter(w, elements='data', by='chunk_factor')
str(read.csv(input_filename))
setwd("~/ejohnson/code/workflows/workflows/tests/R")
str(read.csv(input_filename))
d <- read.csv(input_filename)
w <- scatter(w, elements='df', by='chunk_factor')
w <- newWorkflow(list(df=read.csv(input_filename)), working_directory='output')
w <- scatter(w, elements='df', by='chunk_factor')
getElement(d, '')
devtools::document()
devtools::install()
devtools::document()
devtools::install()
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
w$pipelines
?aggregate
w <- delay(w, function(x) {
x$means <- mean(x$df$vals)
x
})
w <- delay(w, function(x) {
x$medians <- median(x$df$vals)
x
})
w
w2 <- execute(w)
w2 <- execute(w, parallel=FALSE)
devtools::document()
devtools::install()
w2 <- execute(w, parallel=FALSE)
devtools::document()
devtools::install()
w2 <- execute(w, parallel=FALSE)
devtools::document()
devtools::install()
w2 <- execute(w, parallel=FALSE)
w
w$pipelines[[1]]$targets
devtools::document()
devtools::install()
w2 <- execute(w, parallel=FALSE)
w <- newWorkflow(input_object, working_directory='output')
w <- scatter(w, elements='df', by='chunk_factor')
w <- delay(w, function(x) {
x$means <- mean(x$df$vals)
x
})
w <- delay(w, function(x) {
x$medians <- median(x$df$vals)
x
})
w2 <- execute(w, parallel=FALSE)
w2
w2g <- gather(w2, c('df', 'means', 'medians'))
devtools::load_all("~/ejohnson/code/workflows/workflows")
w2g <- gather(w2, c('df', 'means', 'medians'))
devtools::load_all("~/ejohnson/code/workflows/workflows")
w2g <- gather(w2, c('df', 'means', 'medians'))
devtools::load_all("~/ejohnson/code/workflows/workflows")
w2g <- gather(w2, c('df', 'means', 'medians'))
devtools::load_all("~/ejohnson/code/workflows/workflows")
w2g <- gather(w2, c('df', 'means', 'medians'))
w2g
w <- newWorkflow(input_object, working_directory='output')
w <- scatter(w, elements='df', by='chunk_factor')
w <- delay(w, function(x) {
x$means <- data.frame(mean(x$df$vals))
x
})
w <- delay(w, function(x) {
x$medians <- data.frame(median(x$df$vals))
x
})
w2 <- execute(w, parallel=FALSE)
w2g <- gather(w2, c('df', 'means', 'medians'))
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
library(workflows)
w2g
stopifnot(identical(w), gather(ws, 'df'))
stopifnot(identical(w, gather(ws, 'df')))
w <- newWorkflow(input_object, working_directory='output')
ws <- scatter(w, elements='df', by='chunk_factor')
stopifnot(identical(w, gather(ws, 'df')))
gather(ws, 'df'))
gather(ws, 'df')
w
input_object <- structure(list(df=readr::read_csv(input_filename), meta=input_filename), class='arbitraryObject')
w <- newWorkflow(input_object, working_directory='output')
ws <- scatter(w, elements='df', by='chunk_factor')
stopifnot(identical(w, gather(ws, 'df')))
w
ws
gather(ws, 'df')
w2 <- execute(ws)
w2 <- execute(ws, parallel=FALSE)
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
w2g
?write.workflow
devtools::load_all("~/ejohnson/code/workflows/workflows")
library(workflows)
?write.workflow
library(workflows)
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
setwd("~/ejohnson/code/workflows/workflows")
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
?write.workflow
?write.workflow
library(workflows)
library(workflows)
?write.workflow
library(workflows)
?write.workflow
library(workflows)
library(workflows)
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
library(workflows)
indir <- file.path('tests', 'input')
outdir <- file.path('tests', 'output')
input_filename <- file.path(indir, 'input-df.csv')
input_object <- structure(list(df=readr::read_csv(input_filename), meta=input_filename), class='arbitraryObject')
w <- newWorkflow(input_object, working_directory=outdir)
ws <- scatter(w, elements='df', by='chunk_factor')
ws <- delay(ws, function(x) {
x$means <- data.frame(mean(x$df$vals))
x
})
ws <- delay(ws, function(x) {
x$medians <- data.frame(median(x$df$vals))
x
})
w2 <- execute(ws, parallel=TRUE)
w2g <- gather(w2, c('df', 'means', 'medians'))
write(w2g, file.path(outdir, 'output-workflow.rds'))
class(w2g)
?write
write
load
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
library(workflows)
w2g
wl
wl$means
wl$pipelines[[1]]$means
wl$pipelines[[1]]$data$means
w2g$pipelines[[1]]$data$means
w2g$pipelines[[1]]$data$medians
wl$pipelines[[1]]$data$medians
str(wl)
str(w2g)
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
?newWorkflow
inherits(NULL, 'character')
library(workflows)
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
wfchk
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
library(workflows)
devtools::load_all("~/ejohnson/code/workflows/workflows")
w <- newWorkflow(input_object, working_directory=outdir, checkpoint=TRUE)
ws <- scatter(w, elements='df', by='chunk_factor')
ws <- delay(ws, function(x) {
x$means <- data.frame(mean(x$df$vals))
x
})
ws <- delay(ws, function(x) {
x$medians <- data.frame(median(x$df$vals))
x
})
w2 <- execute(ws, parallel=TRUE)
w2g <- gather(w2, c('df', 'means', 'medians'))
write_workflow(w2g, file.path(outdir, 'output-workflow.rds'))
wl <- load_workflow(file.path(outdir, 'output-workflow.rds'))
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
?basename
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
basename(tests/output/_checkpoints/checkpoint1536154683.93504-chunk_factor-A)
basename('tests/output/_checkpoints/checkpoint1536154683.93504-chunk_factor-A')
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
devtools::load_all("~/ejohnson/code/workflows/workflows")
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
wfchk
wfchk.g <- gather(wfchk, c('df', 'means', 'medians'))
wfchk.g
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
library(workflows)
devtools::install_github('eachanjohnson/workflows', ref='initial')
execute
library(workflows)
execute()
execute
execute.workflows
execute.workflow
source('~/ejohnson/code/workflows/workflows/tests/R/workflow-test-script.R')
methods(execute)
?methods
methods(execute)$execute.workflow
methods(execute)[3]
attr(methods(execute)[3])
attr(methods(execute)[3], 'info')
methods(execute)[3]$info
str(methods(execute))
str(methods(build))
library(workflows)
loadedNamespaces()
sessionDetails()
sessionInfo()
?loadedNamespaces
?sessionInfo
sessionInfo()$otherPkgs
str(sessionInfo()$otherPkgs)
sapply(sessionInfo()$otherPkgs, getElement, 'Package')
library(workflows)
library(workflows)
library(workflows)
library(workflows)
library(workflows)
library(workflows)
library(workflows)
library(workflows)
library(workflows)
devtools::install_github('eachanjohnson/workflows')
library(workflows)
devtools::install_github('eachanjohnson/workflows')
?object.size
object.size(print)
object.size(print)/3
ceiling(object.size(print)/3)
ceiling(object.size(print)/3)
ceiling(format(object.size(print)/3))
format(object.size(print))
str(object.size(print))
str(as.numeric(object.size(print)))
?case
?switch
file.size()
?file.size
library(workflows)
library(workflows)
library(workflows)
library(workflows)
for (i in NA) print(i)
library(workflows)
library(workflows)
library(workflows)
list.files()
list.files(pattern='tests')
list.files(pattern='tests/')
list.files(pattern='tests/*')
list.files(pattern='./tests/*')
library(workflows)
library(workflows)
library(workflows)
indir <- file.path('tests', 'input')
outdir <- file.path('tests', 'output')
input_filename <- file.path(indir, 'input-df.csv')
input_object <- structure(list(df=readr::read_csv(input_filename), meta=input_filename), class='arbitraryObject')
w <- newWorkflow(input_object, working_directory=outdir, checkpoint=TRUE)
ws <- scatter(w, elements='df', by='chunk_factor')
ws <- delay(ws, function(x) {
x$means <- data.frame(mean(x$df$vals))
x
})
ws <- delay(ws, function(x) {
x$medians <- data.frame(median(x$df$vals))
x
})
w2 <- execute(ws, parallel=TRUE)
w2g <- gather(w2, c('df', 'means', 'medians'))
write_workflow(w2g, file.path(outdir, 'output-workflow.rds'))
wl <- load_workflow(file.path(outdir, 'output-workflow.rds'))
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
wfchk.g <- gather(wfchk, c('df', 'means', 'medians'))
library(workflows)
library(workflows)
library(workflows)
library(workflows)
devtools::install_github('eachanjohnson/concensusGLM')
library(workflows)
library(workflows)
library(workflows)
library(workflows)
indir <- file.path('tests', 'input')
outdir <- file.path('tests', 'output')
input_filename <- file.path(indir, 'input-df.csv')
input_object <- structure(list(df=readr::read_csv(input_filename), meta=input_filename), class='arbitraryObject')
w <- newWorkflow(input_object, working_directory=outdir, checkpoint=TRUE)
ws <- scatter(w, elements='df', by='chunk_factor')
str (ws)
str (w)
w$pipelines[[1]]$targets
library(workflows)
library(workflows)
indir <- file.path('tests', 'input')
outdir <- file.path('tests', 'output')
input_filename <- file.path(indir, 'input-df.csv')
input_object <- structure(list(df=readr::read_csv(input_filename), meta=input_filename), class='arbitraryObject')
w <- newWorkflow(input_object, working_directory=outdir, checkpoint=TRUE)
ws <- scatter(w, elements='df', by='chunk_factor')
ws <- delay(ws, function(x) {
x$means <- data.frame(mean(x$df$vals))
x
})
ws <- delay(ws, function(x) {
x$medians <- data.frame(median(x$df$vals))
x
})
w2 <- execute(ws, parallel=TRUE)
w2g <- gather(w2, c('df', 'means', 'medians'))
write_workflow(w2g, file.path(outdir, 'output-workflow.rds'))
wl <- load_workflow(file.path(outdir, 'output-workflow.rds'))
wfchk <- newWorkflow(working_directory=outdir, load_checkpoint='latest')
wfchk.g <- gather(wfchk, c('df', 'means', 'medians'))
library(workflows)
